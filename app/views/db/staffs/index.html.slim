- title = t "head.title.db.staffs.index"
- set_meta_tags(title: title, reverse: true, prefix: false)


.l-topbar.container-fluid.px-3
  .row.flex-items-xs-between
    .col-8
      = render "db/application/topbar_title", parent: @work, child: title
    - if user_signed_in? && current_user.committer?
      .col.text-right
        = link_to new_db_work_staff_path(@work), class: "btn btn-outline-primary" do
          = icon "edit"
          = t "resources.staff.new_staff"

= render "db/works/subnav", work: @work

.container-fluid.p-3
  - if @staffs.present?
    .c-card
      table.table.table-hover
        thead
          tr
            th ID
            th = t "activerecord.attributes.staff.resource_id"
            th = t "activerecord.attributes.staff.name"
            th = t "activerecord.attributes.staff.role"
            th = t "activerecord.attributes.staff.sort_number"
            th = t "noun.state"
            th = t "head.title.db.staffs.activities"
            - if policy(@staffs).edit?
              th = t "noun.edit"
            - if policy(@staffs).hide?
              th = t "noun.unpublish"
            - if policy(@staffs).destroy?
              th = t "noun.delete"
        tbody
          - @staffs.each do |staff|
            tr
              td = staff.id
              td
                = staff.resource.db_detail_link
                br
                = staff.resource.name_en.presence || "-"
              td
                = staff.name.presence || "-"
                br
                = staff.name_en.presence || "-"
              td
                = staff.role_name
                br
                - if staff.role_value == "other"
                  = staff.role_other_en.presence || "-"
                - else
                  = t "enumerize.staff.role.#{staff.role_value}", locale: :en
              td = staff.sort_number
              td
                .badge class="#{staff.not_deleted? ? 'badge-success' : 'badge-warning'}"
                  = t("resources.staff.state.#{staff.not_deleted? ? 'published' : 'hidden'}")
              td = link_to t("head.title.db.staffs.activities"), activities_db_staff_path(staff)
              - if policy(staff).edit?
                td = link_to t("noun.edit"), edit_db_staff_path(staff), class: "btn btn-primary btn-sm"
              - if policy(staff).hide?
                td
                  - if staff.not_deleted?
                    = link_to t("noun.unpublish"), hide_db_staff_path(staff), class: "btn btn-warning btn-sm", data: { method: "patch", confirm: t("messages._common.are_you_sure") }
              - if policy(staff).destroy?
                td = link_to t("noun.delete"), db_staff_path(staff), class: "btn btn-danger btn-sm", data: { method: :delete, confirm: t("messages._common.are_you_sure") }

  - else
    = render "application/components/empty", text: t("resources.staff.there_are_no_staffs")
