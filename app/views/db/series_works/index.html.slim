- title = t "head.title.db.series_works.index"
- set_meta_tags(title: title, reverse: true, prefix: false)


.l-topbar.container-fluid.px-3
  .row.flex-items-xs-between
    .col-8
      = render "db/application/topbar_title", parent: @series, child: title
    - if user_signed_in? && current_user.committer?
      .col.text-right
        = link_to new_db_series_series_work_path(@series), class: "btn btn-outline-primary" do
          = icon "edit"
          = t "resources.series_work.new_series_works"

= render "db/series/subnav", series: @series

.container-fluid.p-3
  - if @series_works.present?
    .c-card
      table.table.table-hover
        thead
          tr
            th ID
            th = t "activerecord.attributes.series_work.work_id"
            th = t "activerecord.attributes.series_work.summary"
            th = t "noun.state"
            th = t "head.title.db.series_works.activities"
            - if policy(@series_works).edit?
              th = t "noun.edit"
            - if policy(@series_works).hide?
              th = t "noun.state_change"
            - if policy(@series_works).destroy?
              th = t "noun.delete"
        tbody
          - @series_works.each do |series_work|
            tr
              td = series_work.id
              td = link_to series_work.work.local_title, work_path(series_work.work), target: "_blank"
              td = series_work.local_summary.presence || "-"
              td
                .badge class="#{series_work.not_deleted? ? 'badge-success' : 'badge-warning'}"
                  = t("resources.series.aasm_state.#{series_work.aasm_state}")
              td = link_to t("verb.view"), activities_db_series_work_path(series_work)
              - if policy(series_work).edit?
                td
                  = link_to t("noun.edit"), edit_db_series_work_path(series_work), class: "btn btn-primary btn-sm"
              - if policy(series_work).hide?
                td
                  - if series_work.not_deleted?
                    = link_to t("noun.unpublish"), hide_db_series_work_path(series_work), class: "btn btn-warning btn-sm", data: { method: "patch", confirm: t("messages._common.are_you_sure") }
              - if policy(series_work).destroy?
                td = link_to t("noun.delete"), db_series_work_path(series_work), class: "btn btn-danger btn-sm", data: { method: :delete, confirm: t("messages._common.are_you_sure") }

  - else
    = render "application/components/empty", text: t("messages._empty.no_series_works")
