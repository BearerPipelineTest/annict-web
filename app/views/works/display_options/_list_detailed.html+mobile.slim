- content_for :head do
  script src="https://www.youtube.com/player_api"

- works.each do |work|
  .c-card.mb-3.py-3
    .container
      .row.mb-3
        .col-4.pe-0
          = link_to anime_path(anime_id: work.id), class: "d-inline-block" do
            = render V4::WorkImageComponent.new(image_url_1x: v4_ann_image_url(work.anime_image, :image, size: "250x"), image_url_2x: v4_ann_image_url(work.anime_image, :image, size: "500x"))
          - if work.anime_image.present?
            .u-very-small.text-end
              = work.anime_image.asin_or_copyright_text
        .col-8
          .mb-1.u-lh-0
            = Badges::AnimeMediaBadgeComponent.new(self, anime: work).render
          h3.fw-bold.mb-1
            = link_to work.local_title, anime_path(anime_id: work.id), class: "u-text-body"
          .mb-2
            span.fw-bold.me-1 = work.watchers_count
            span.text-muted.small Watchers
          = V6::Selectors::StatusSelectorComponent.new(self, anime: work).render

      - if work.local_synopsis.present?
        .fw-bold.mb-1
          = t "activerecord.attributes.work.synopsis"
        .mb-3
          = render BodyComponent.new(height: 250) do
            = sanitize(work.local_synopsis(raw: true))
          .small.mt-2.text-end
            span.me-1
              = t "noun.source"
              | :
            = work.local_synopsis_source

      - trailers = @trailers_data.select { |pd| pd[:work_id] == work.id }.first[:trailers].sort_by { |p| p.sort_number }
      - if trailers.present?
        .fw-bold.mb-1
          = t "noun.pv"
        .row
          - trailers.each do |trailer|
            .col-6.text-center.mb-3
              - if trailer.youtube?
                c-youtube-modal-player thumbnail-url="#{v4_ann_image_url(trailer, :image, size: "300x169")}" video-id="#{trailer.youtube_video_id}" video-title="#{locale_ja? ? trailer.title : trailer.title_en}" annict-url="#{ENV.fetch('ANNICT_URL')}" :width="320" :height="180" :is-auto-play="false"
              - else
                = link_to trailer.url, target: "_blank" do
                  .c-video-thumbnail
                    = ann_image_tag trailer, :image, size: "300x169", class: "img-fluid rounded img-thumbnail"
                    = icon "play-circle", "far"
                  .small
                    = trailer.title

      - casts = @casts_data.select { |cd| cd[:work_id] == work.id }.first[:casts].sort_by { |c| c.sort_number }
      - casts = casts.select { |c| locale_ja? ? true : c.support_en? }
      - if casts.present?
        .fw-bold.mb-1
          = t "noun.casts"
        ul.list-inline.mb-0.u-lh-5
          - casts.first(10).each do |cast|
            li.list-inline-item.me-3
              span.me-1
                = cast.character.decorate.name_link
                | :
              = cast.decorate.local_name_with_old_link

      - staffs = @staffs_data.select { |sd| sd[:work_id] == work.id }.first[:staffs].sort_by { |s| s.sort_number }
      - staffs = staffs.select { |s| locale_ja? ? true : s.support_en? }
      - if staffs.present?
        .mt-3
          .fw-bold.mb-1
            = t "noun.staffs"
          ul.list-inline.mb-0.u-lh-5
            - staffs.each do |staff|
              li.list-inline-item.me-3
                = "#{staff.decorate.role_name}: "
                = staff.decorate.local_name_with_old_link

      - programs = @programs_data.select { |pdd| pdd[:work_id] == work.id }.first[:programs].sort_by { |s| s.channel_id }
      - programs = programs.select { |pd| locale_ja? ? true : pd.support_en? }
      - if programs.present?
        .mt-3
          .fw-bold.mb-1
            = t "noun.vods"
        = render "works/vod_list", channels: @channels, slice: 2, programs: programs

      c-work-friends :work-id="#{work.id}" title="#{t('noun.friends_who_are_watching')}" more-text="#{t('verb.view_all')}"
